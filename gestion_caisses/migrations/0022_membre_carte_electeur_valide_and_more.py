# Generated by Django 5.2.5 on 2025-09-09 09:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gestion_caisses', '0021_salaireagent_fichepaie_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='membre',
            name='carte_electeur_valide',
            field=models.BooleanField(default=False, verbose_name="Carte d'électeur valide"),
        ),
        migrations.AddField(
            model_name='membre',
            name='indicatif_telephone',
            field=models.CharField(choices=[('+228', 'Togo'), ('+229', 'Bénin'), ('+233', 'Ghana')], default='+228', help_text='Indicatif du pays du numéro de téléphone', max_length=5),
        ),
        migrations.AddField(
            model_name='membre',
            name='numero_whatsapp',
            field=models.CharField(blank=True, help_text="Numéro WhatsApp (sans indicatif, optionnel). Longueur contrôlée selon l'indicatif.", max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='Le numéro WhatsApp doit contenir uniquement des chiffres', regex='^[0-9]+$')]),
        ),
        migrations.AddField(
            model_name='membre',
            name='possede_carte_electeur',
            field=models.BooleanField(default=True, verbose_name="Possède une carte d'électeur"),
        ),
        migrations.AlterField(
            model_name='membre',
            name='numero_carte_electeur',
            field=models.CharField(help_text="Numéro de carte d'électeur (alphanumérique, 26 caractères max)", max_length=26, validators=[django.core.validators.RegexValidator(message='Le numéro de carte doit être alphanumérique et contenir au plus 26 caractères.', regex='^[A-Za-z0-9]{1,26}$')]),
        ),
        migrations.AlterField(
            model_name='membre',
            name='numero_telephone',
            field=models.CharField(help_text="Numéro de téléphone (sans indicatif). Longueur contrôlée selon l'indicatif.", max_length=12, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit contenir uniquement des chiffres', regex='^[0-9]+$')]),
        ),
        migrations.CreateModel(
            name='Quartier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=10)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quartiers', to='gestion_caisses.village')),
            ],
            options={
                'verbose_name': 'Quartier',
                'verbose_name_plural': 'Quartiers',
                'ordering': ['nom'],
                'unique_together': {('nom', 'village')},
            },
        ),
        migrations.AddField(
            model_name='membre',
            name='quartier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membres', to='gestion_caisses.quartier'),
        ),
    ]
