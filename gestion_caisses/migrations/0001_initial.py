# Generated by Django 5.2.5 on 2025-08-12 10:51

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Commune',
                'verbose_name_plural': 'Communes',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Prefecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Préfecture',
                'verbose_name_plural': 'Préfectures',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Région',
                'verbose_name_plural': 'Régions',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATION', 'Création'), ('MODIFICATION', 'Modification'), ('SUPPRESSION', 'Suppression'), ('CONSULTATION', 'Consultation'), ('VALIDATION', 'Validation'), ('REJET', 'Rejet')], max_length=20)),
                ('modele', models.CharField(max_length=100)),
                ('objet_id', models.PositiveIntegerField()),
                ('details', models.JSONField()),
                ('ip_adresse', models.GenericIPAddressField(blank=True, null=True)),
                ('date_action', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions_auditees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Journal d'audit",
                'verbose_name_plural': "Journaux d'audit",
                'ordering': ['-date_action'],
            },
        ),
        migrations.CreateModel(
            name='Canton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cantons', to='gestion_caisses.commune')),
            ],
            options={
                'verbose_name': 'Canton',
                'verbose_name_plural': 'Cantons',
                'ordering': ['nom'],
                'unique_together': {('nom', 'commune')},
            },
        ),
        migrations.CreateModel(
            name='Caisse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=50, unique=True)),
                ('nom_association', models.CharField(max_length=200)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_activation', models.DateTimeField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDUE', 'Suspendue')], default='INACTIVE', max_length=20)),
                ('fond_initial', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('fond_disponible', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('montant_total_prets', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('montant_total_remboursements', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('canton', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caisses', to='gestion_caisses.canton')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caisses', to='gestion_caisses.commune')),
            ],
            options={
                'verbose_name': 'Caisse',
                'verbose_name_plural': 'Caisses',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_carte_electeur', models.CharField(help_text="Numéro de carte d'électeur", max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenoms', models.CharField(max_length=200)),
                ('date_naissance', models.DateField()),
                ('adresse', models.TextField()),
                ('numero_telephone', models.CharField(max_length=20)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos_membres/')),
                ('role', models.CharField(choices=[('PRESIDENTE', 'Présidente'), ('SECRETAIRE', 'Secrétaire'), ('TRESORIERE', 'Trésorière'), ('MEMBRE', 'Membre simple')], default='MEMBRE', max_length=20)),
                ('statut', models.CharField(choices=[('ACTIF', 'Actif'), ('INACTIF', 'Inactif'), ('SUSPENDU', 'Suspendu'), ('RETRAITE', 'Retraité')], default='ACTIF', max_length=20)),
                ('date_adhesion', models.DateTimeField(auto_now_add=True)),
                ('date_derniere_activite', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('caisse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membres', to='gestion_caisses.caisse')),
            ],
            options={
                'verbose_name': 'Membre',
                'verbose_name_plural': 'Membres',
                'ordering': ['nom', 'prenoms'],
                'unique_together': {('numero_carte_electeur', 'caisse')},
            },
        ),
        migrations.AddField(
            model_name='caisse',
            name='presidente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caisses_presidees', to='gestion_caisses.membre'),
        ),
        migrations.AddField(
            model_name='caisse',
            name='secretaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caisses_secretariees', to='gestion_caisses.membre'),
        ),
        migrations.AddField(
            model_name='caisse',
            name='tresoriere',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caisses_tresoriees', to='gestion_caisses.membre'),
        ),
        migrations.AddField(
            model_name='commune',
            name='prefecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communes', to='gestion_caisses.prefecture'),
        ),
        migrations.AddField(
            model_name='caisse',
            name='prefecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caisses', to='gestion_caisses.prefecture'),
        ),
        migrations.CreateModel(
            name='Pret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_pret', models.CharField(editable=False, max_length=20, unique=True)),
                ('montant_demande', models.DecimalField(decimal_places=2, max_digits=15)),
                ('montant_accord', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('taux_interet', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('duree_mois', models.PositiveIntegerField(help_text='Durée en mois')),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('date_decaissement', models.DateTimeField(blank=True, null=True)),
                ('date_remboursement_complet', models.DateTimeField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('VALIDE', 'Validé'), ('REJETE', 'Rejeté'), ('BLOQUE', 'Bloqué'), ('EN_COURS', 'En cours'), ('REMBOURSE', 'Remboursé'), ('EN_RETARD', 'En retard')], default='EN_ATTENTE', max_length=20)),
                ('motif', models.TextField()),
                ('motif_rejet', models.TextField(blank=True)),
                ('montant_rembourse', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('nombre_echeances', models.PositiveIntegerField(default=0)),
                ('nombre_echeances_payees', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('caisse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prets', to='gestion_caisses.caisse')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prets', to='gestion_caisses.membre')),
            ],
            options={
                'verbose_name': 'Prêt',
                'verbose_name_plural': 'Prêts',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='MouvementFond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_mouvement', models.CharField(choices=[('ALIMENTATION', 'Alimentation'), ('DECAISSEMENT', 'Décaissement'), ('REMBOURSEMENT', 'Remboursement'), ('FRAIS', 'Frais'), ('AUTRE', 'Autre')], max_length=20)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=15)),
                ('solde_avant', models.DecimalField(decimal_places=2, max_digits=15)),
                ('solde_apres', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date_mouvement', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('caisse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mouvements_fonds', to='gestion_caisses.caisse')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvements_fonds_crees', to=settings.AUTH_USER_MODEL)),
                ('pret', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvements_fonds', to='gestion_caisses.pret')),
            ],
            options={
                'verbose_name': 'Mouvement de fond',
                'verbose_name_plural': 'Mouvements de fonds',
                'ordering': ['-date_mouvement'],
            },
        ),
        migrations.AddField(
            model_name='prefecture',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefectures', to='gestion_caisses.region'),
        ),
        migrations.AddField(
            model_name='caisse',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caisses', to='gestion_caisses.region'),
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('canton', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='villages', to='gestion_caisses.canton')),
            ],
            options={
                'verbose_name': 'Village',
                'verbose_name_plural': 'Villages',
                'ordering': ['nom'],
                'unique_together': {('nom', 'canton')},
            },
        ),
        migrations.AddField(
            model_name='caisse',
            name='village',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caisses', to='gestion_caisses.village'),
        ),
        migrations.CreateModel(
            name='VirementBancaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_compte_cible', models.CharField(max_length=50)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=15)),
                ('statut', models.CharField(choices=[('DEMANDE', 'Demande'), ('EN_COURS', 'En cours'), ('EFFECTUE', 'Effectué'), ('ECHOUE', 'Échoué'), ('ANNULE', 'Annulé')], default='DEMANDE', max_length=20)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_execution', models.DateTimeField(blank=True, null=True)),
                ('reference_bancaire', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('caisse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='virements_bancaires', to='gestion_caisses.caisse')),
            ],
            options={
                'verbose_name': 'Virement bancaire',
                'verbose_name_plural': 'Virements bancaires',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='commune',
            unique_together={('nom', 'prefecture')},
        ),
        migrations.CreateModel(
            name='Echeance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_echeance', models.PositiveIntegerField()),
                ('montant_echeance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date_echeance', models.DateField()),
                ('montant_paye', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('date_paiement', models.DateTimeField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('A_PAYER', 'À payer'), ('PARTIELLEMENT_PAYE', 'Partiellement payé'), ('PAYE', 'Payé'), ('EN_RETARD', 'En retard')], default='A_PAYER', max_length=20)),
                ('pret', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='echeances', to='gestion_caisses.pret')),
            ],
            options={
                'verbose_name': 'Échéance',
                'verbose_name_plural': 'Échéances',
                'ordering': ['pret', 'numero_echeance'],
                'unique_together': {('pret', 'numero_echeance')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='prefecture',
            unique_together={('nom', 'region')},
        ),
    ]
