version: '3.8'

services:
  # Base de données PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: caisses_femmes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - caisses_network

  # Cache Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - caisses_network

  # Application Django
  web:
    build: .
    command: gunicorn caisses_femmes.wsgi:application --bind 0.0.0.0:8000 --workers 3
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-change-me-in-prod}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=caisses_femmes
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres123}
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-}
      - USE_X_FORWARDED_PROTO=true
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - caisses_network

  # Serveur web Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - caisses_network

  # Celery pour les tâches asynchrones
  celery:
    build: .
    command: celery -A caisses_femmes worker --loglevel=info
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=caisses_femmes
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres123}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - caisses_network

  # Celery Beat pour les tâches planifiées
  celery-beat:
    build: .
    command: celery -A caisses_femmes beat --loglevel=info
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=caisses_femmes
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres123}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - caisses_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  caisses_network:
    driver: bridge
