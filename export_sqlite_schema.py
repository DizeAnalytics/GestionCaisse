import os
import sqlite3


def main():
    base_dir = os.path.dirname(__file__)
    db_path = os.path.join(base_dir, "db.sqlite3")
    out_path = os.path.join(base_dir, "schema_only.sql")

    if not os.path.exists(db_path):
        raise SystemExit(f"Base de données introuvable: {db_path}")

    connection = sqlite3.connect(db_path)
    try:
        cursor = connection.cursor()

        query = (
            "SELECT type, name, tbl_name, sql "
            "FROM sqlite_schema "
            "WHERE sql IS NOT NULL AND type IN ('table','index','trigger','view') "
            "ORDER BY CASE type "
            "  WHEN 'table' THEN 1 "
            "  WHEN 'index' THEN 2 "
            "  WHEN 'trigger' THEN 3 "
            "  WHEN 'view' THEN 4 "
            "  ELSE 5 END, name"
        )

        rows = cursor.execute(query).fetchall()

        with open(out_path, "w", encoding="utf-8") as f:
            f.write("-- Schema-only SQL export (tables, indexes, triggers, views)\n")
            f.write("-- Generated by export_sqlite_schema.py\n\n")
            f.write("BEGIN TRANSACTION;\n")

            for obj_type, name, tbl_name, sql in rows:
                # Skip internal SQLite objects
                if name.startswith("sqlite_"):
                    continue
                statement = sql.strip()
                if not statement.endswith(';'):
                    statement += ';'
                f.write(statement + "\n")

            f.write("COMMIT;\n")

        print(f"Schema SQL généré: {out_path}")
    finally:
        connection.close()


if __name__ == "__main__":
    main()


